{"version":3,"sources":["Image.tsx"],"names":["_","React","Image","RNImage","Animated","StyleSheet","View","Platform","BlurView","CacheManager","mounted","state","uri","undefined","intensity","Value","load","props","prevProps","prevState","preview","transitionDuration","newURI","timing","duration","toValue","useNativeDriver","OS","start","options","get","getPath","path","setState","style","defaultSource","tint","useBlurView","otherProps","isImageReady","opacity","interpolate","inputRange","outputRange","flattenedStyle","flatten","computedStyle","absoluteFill","transform","pickBy","_val","key","propsToCopy","indexOf","result","value","borderWidth","backgroundColor","black","white","Component","defaultProps","AnimatedBlurView","createAnimatedComponent"],"mappings":"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","sourcesContent":["// @flow\nimport * as _ from \"lodash\";\nimport * as React from \"react\";\nimport {\n  Image as RNImage,\n  Animated,\n  StyleSheet,\n  View,\n  Platform,\n  ImageStyle,\n  ImageURISource,\n  ImageSourcePropType,\n  StyleProp\n} from \"react-native\";\nimport { BlurView } from \"expo-blur\";\n\nimport CacheManager, { DownloadOptions } from \"./CacheManager\";\n\ninterface ImageProps {\n  style?: StyleProp<ImageStyle>;\n  defaultSource?: ImageURISource | number;\n  preview?: ImageSourcePropType;\n  options?: DownloadOptions;\n  uri: string;\n  transitionDuration?: number;\n  tint?: \"dark\" | \"light\";\n  useBlurView?: boolean;\n}\n\ninterface ImageState {\n  uri: string | undefined;\n  intensity: Animated.Value;\n}\n\nexport default class Image extends React.Component<ImageProps, ImageState> {\n  mounted = true;\n\n  static defaultProps = {\n    transitionDuration: 300,\n    tint: \"dark\",\n    useBlurView: false\n  };\n\n  state = {\n    uri: undefined,\n    intensity: new Animated.Value(100)\n  };\n\n  componentDidMount() {\n    this.load(this.props);\n  }\n\n  componentDidUpdate(prevProps: ImageProps, prevState: ImageState) {\n    const { preview, transitionDuration, uri: newURI } = this.props;\n    const { uri, intensity } = this.state;\n    if (newURI !== prevProps.uri) {\n      this.load(this.props);\n    } else if (uri && prevState.uri === undefined) {\n      Animated.timing(intensity, {\n        duration: transitionDuration,\n        toValue: 0,\n        useNativeDriver: Platform.OS === \"android\"\n      }).start();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  async load({ uri, options = {} }: ImageProps): Promise<void> {\n    if (uri) {\n      const path = await CacheManager.get(uri, options).getPath();\n      if (this.mounted) {\n        this.setState({ uri: path });\n      }\n    }\n  }\n\n  render() {\n    const { preview, style, defaultSource, tint, useBlurView, ...otherProps } = this.props;\n    const { uri, intensity } = this.state;\n    const isImageReady = !!uri;\n    const opacity = intensity.interpolate({\n      inputRange: [0, 100],\n      outputRange: [0, 0.5]\n    });\n    const flattenedStyle = StyleSheet.flatten(style);\n    const computedStyle: StyleProp<ImageStyle> = [\n      StyleSheet.absoluteFill,\n      _.transform(_.pickBy(flattenedStyle, (_val, key) => propsToCopy.indexOf(key) !== -1), (result, value: any, key) =>\n        Object.assign(result, { [key]: value - (flattenedStyle.borderWidth || 0) })\n      )\n    ];\n    return (\n      <View {...{ style }}>\n        {!!defaultSource && !isImageReady && <RNImage source={defaultSource} style={computedStyle} {...otherProps} />}\n        {!!preview && (\n          <RNImage\n            source={preview}\n            style={computedStyle}\n            blurRadius={Platform.OS === \"android\" ? 0.5 : 0}\n            {...otherProps}\n          />\n        )}\n        {isImageReady && <RNImage source={{ uri }} style={computedStyle} {...otherProps} />}\n        {Platform.OS === \"ios\" && useBlurView && <AnimatedBlurView style={computedStyle} {...{ intensity, tint }} />}\n        {(Platform.OS === \"android\" || !useBlurView) && (\n          <Animated.View style={[computedStyle, { backgroundColor: tint === \"dark\" ? black : white, opacity }]} />\n        )}\n      </View>\n    );\n  }\n}\n\nconst black = \"black\";\nconst white = \"white\";\nconst propsToCopy = [\n  \"borderRadius\",\n  \"borderBottomLeftRadius\",\n  \"borderBottomRightRadius\",\n  \"borderTopLeftRadius\",\n  \"borderTopRightRadius\"\n];\nconst AnimatedBlurView = Animated.createAnimatedComponent(BlurView);\n"]}